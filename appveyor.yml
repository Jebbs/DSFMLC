# Build version format
version: 2.3.{build}

os: Visual Studio 2015

environment:
 matrix:
  - toolchain: msvc12
    arch: x86
  - toolchain: msvc12
    arch: x64
  - toolchain: msvc14
    arch: x86
  - toolchain: msvc14
    arch: x64
  - toolchain: mingw
    arch: x86
  - toolchain: mingw
    arch: x64

#Everything should build!
#matrix:
#  allow_failures:
#    - toolchain: mingw

#Let's blacklist gh-pages
branches:
  except:
    - gh-pages

#because we have to request parallel builds, I guess.
build:
  parallel: true

install:
 - ps: if($env:toolchain -eq "mingw"){
          if($env:arch -eq "x86"){
            $WebLocation = "http://dsfml.com/bins/mingw/i686-5.2.0-release-posix-dwarf-rt_v4-rev0.7z";
          }
          elseif($env:arch -eq "x64"){
            $WebLocation = "http://dsfml.com/bins/mingw/x86_64-5.2.0-release-posix-seh-rt_v4-rev0.7z";
          }
          $DownloadLocation = "c:\mingw.7z";
          (new-object net.webclient).DownloadFile($WebLocation, $DownloadLocation);
          pushd c:\\;
          7z x mingw.7z > $null;
          popd;
      }

#Set's up MSVC and MinGW
#We can't use the full path when using MinGW because another MinGW is on the path and it messes things up.
#We also have to set up MSVC because I couldn't get the script to run otherwise :(
before_build:
  - ps: if($env:toolchain -eq "msvc12"){
          if($env:arch -eq "x86"){
            $env:compilersetup = "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall";
            $env:compilersetupargs = "x86";
          }
          elseif($env:arch -eq "x64"){
            $env:compilersetup = "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall";
            $env:compilersetupargs = "amd64";
          }
          $env:maketype = "NMake Makefiles";
          $env:makecommand = "nmake";
        }
        elseif($env:toolchain -eq "msvc14"){
          if($env:arch -eq "x86"){
            $env:compilersetup = "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall";
            $env:compilersetupargs = "x86";
          }
          elseif($env:arch -eq "x64"){
            $env:compilersetup = "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall";
            $env:compilersetupargs = "amd64";
          }
          $env:maketype = "NMake Makefiles";
          $env:makecommand = "nmake";
        }
        elseif($env:toolchain -eq "mingw"){
          if($env:arch -eq "x86"){
            $env:compilerpath = "C:\mingw32\bin;";
            $env:cmakepath = "C:\Program Files (x86)\CMake\bin";
          }
          elseif($env:arch -eq "x64"){
            $env:compilerpath = "C:\mingw64\bin;";
            $env:cmakepath = "C:\Program Files (x86)\CMake\bin";
          }
          $env:compilersetup = "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall";
          $env:compilersetupargs = "x86";
          $env:maketype = "MinGW Makefiles";
          $env:makecommand = "mingw32-make";
        }

#I hate windows sometimes
#"%compilersetup%" %compilersetupargs% wouldn't run from ps and it wouldn't run in a cmd IF, so it has to run all the time.
build_script:
 - '"%compilersetup%" %compilersetupargs%'
 - ps: if($env:toolchain -eq "mingw"){
        $env:Path = $env:compilerpath + $env:cmakepath;
       }
 - cmake -G"%maketype%" .
 - '%makecommand%'
